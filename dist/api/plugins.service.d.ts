/**
 * REST API for Flexicore filtered by your access rights
 * Flexicore REST API
 *
 * OpenAPI spec version: V1.1.0
 * Contact: avishaybennatan@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Observable } from 'rxjs';
import { PluginInformationHolder } from '../model/pluginInformationHolder';
import { Configuration } from '../configuration';
import { ModuleManifest } from '../model/models';
import { HttpClient, HttpEvent, HttpHeaders, HttpResponse } from '@angular/common/http';
export declare class PluginsService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);
    /**
     *
     * Extends object by coping non-existing properties.
     * @param objA object to be extended
     * @param objB source object
     */
    private extendObj;
    /**
     * @param consumes string[] mime-types
     * @return true: consumes contains 'multipart/form-data', false: otherwise
     */
    private canConsumeForm;
    /**
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     */
    listAllLoadedPlugins(authenticationKey?: string, body?: any, observe?: 'body', reportProgress?: boolean): Observable<Array<PluginInformationHolder>>;
    listAllLoadedPlugins(authenticationKey?: string, body?: any, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<PluginInformationHolder>>>;
    listAllLoadedPlugins(authenticationKey?: string, body?: any, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<PluginInformationHolder>>>;
    /**
    *
    * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
    */
    listAllModules(authenticationkey?: string, extraHttpRequestParams?: any): Observable<Array<ModuleManifest>>;
    /**
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     */
    restart(authenticationkey?: string, extraHttpRequestParams?: any): Observable<{}>;
    /**
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     */
    testUpdate(authenticationkey?: string, extraHttpRequestParams?: any): Observable<{}>;
    /**
     *
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     */
    listAllModulesWithHttpInfo(authenticationkey?: string, extraHttpRequestParams?: any): Observable<Response>;
    /**
     *
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     */
    restartWithHttpInfo(authenticationkey?: string, extraHttpRequestParams?: any): Observable<Response>;
    /**
     *
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     */
    testUpdateWithHttpInfo(authenticationkey?: string, extraHttpRequestParams?: any): Observable<Response>;
}
