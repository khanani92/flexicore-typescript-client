/**
 * REST API for Flexicore filtered by your access rights
 * Flexicore REST API
 *
 * OpenAPI spec version: V1.1.0
 * Contact: avishaybennatan@gmail.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Observable } from 'rxjs';
import { Configuration } from '../configuration';
import { HttpHeaders, HttpClient, HttpResponse, HttpEvent } from '@angular/common/http';
import { PaginationResponse } from '../model/models';
import { TotpSecurityPolicyCreate } from '../model/totpSecurityPolicyCreate';
import { TotpSecurityPolicy } from '../model/totpSecurityPolicy';
import { TotpSecurityPolicyUpdate } from '../model/totpSecurityPolicyUpdate';
import { TotpSecurityPolicyFilter } from '../model/totpSecurityPolicyFilter';
export declare class TotpSecurityPolicyService {
    protected httpClient: HttpClient;
    protected basePath: string;
    defaultHeaders: HttpHeaders;
    configuration: Configuration;
    constructor(httpClient: HttpClient, basePath: string, configuration: Configuration);
    /**
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     * @param body
     */
    createPolicy(authenticationkey?: string, body?: TotpSecurityPolicyCreate, observe?: 'body', reportProgress?: boolean): Observable<TotpSecurityPolicy>;
    createPolicy(authenticationkey?: string, body?: TotpSecurityPolicyCreate, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<TotpSecurityPolicy>>;
    createPolicy(authenticationkey?: string, body?: TotpSecurityPolicyCreate, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<TotpSecurityPolicy>>;
    /**
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     * @param body
     */
    updatePolicy(authenticationkey?: string, body?: TotpSecurityPolicyUpdate, observe?: 'body', reportProgress?: boolean): Observable<TotpSecurityPolicy>;
    updatePolicy(authenticationkey?: string, body?: TotpSecurityPolicyUpdate, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<TotpSecurityPolicy>>;
    updatePolicy(authenticationkey?: string, body?: TotpSecurityPolicyUpdate, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<TotpSecurityPolicy>>;
    /**
     *
     * @param authenticationkey The AuthenticationKey retrieved when sign-in into the system
     * @param body
     */
    getAllPolicy(authenticationkey?: string, body?: TotpSecurityPolicyFilter, observe?: 'body', reportProgress?: boolean): Observable<PaginationResponse<TotpSecurityPolicy>>;
    getAllPolicy(authenticationkey?: string, body?: TotpSecurityPolicyFilter, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PaginationResponse<TotpSecurityPolicy>>>;
    getAllPolicy(authenticationkey?: string, body?: TotpSecurityPolicyFilter, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PaginationResponse<TotpSecurityPolicy>>>;
}
